using Microsoft.Extensions.Configuration;
using Newtonsoft.Json.Linq;

namespace Bazaar.BuildingBlocks.JsonAdapter;

public class JsonDataAdapter
{
    private const string DATA_STORE_PATH_ENV = "DataStorePath";
    private readonly string _dataStorePath;

    public JsonDataAdapter(IConfiguration config)
    {
        _dataStorePath = config[DATA_STORE_PATH_ENV]!;
    }

    public IEnumerable<T> ReadToObjects<T>(string fromSection, Action<T, int> assignAutogeneratedId)
    {
        var dataJson = JObject.Parse(File.ReadAllText(_dataStorePath));
        var itemsJson = dataJson[fromSection]!.Children().ToList();
        var items = new List<T>();
        for (int i = 1; i < itemsJson.Count; i++)
        {
            var item = itemsJson[i].ToObject<T>();
            items.Add(item);
        }
        return GenerateId<T>(items, assignAutogeneratedId);
    }

    public IEnumerable<T> GenerateId<T>(IEnumerable<T> items, Action<T, int> assignAutogeneratedId)
    {
        int i = 1;
        return items.Select(item =>
        {
            assignAutogeneratedId(item, i++);
            return item;
        });
    }
}
