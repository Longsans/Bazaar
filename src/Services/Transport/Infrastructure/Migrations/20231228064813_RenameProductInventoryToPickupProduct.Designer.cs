// <auto-generated />
using System;
using Bazaar.Transport.Infrastructure.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Transport.Infrastructure.Migrations
{
    [DbContext(typeof(TransportDbContext))]
    [Migration("20231228064813_RenameProductInventoryToPickupProduct")]
    partial class RenameProductInventoryToPickupProduct
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Bazaar.Transport.Domain.Entities.Delivery", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DeliveryAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EstimatedDeliveryTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime>("TimeScheduledAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Deliveries");
                });

            modelBuilder.Entity("Bazaar.Transport.Domain.Entities.DeliveryPackageItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DeliveryId")
                        .HasColumnType("int");

                    b.Property<string>("ProductId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Quantity")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("DeliveryId");

                    b.ToTable("DeliveryPackageItems");
                });

            modelBuilder.Entity("Bazaar.Transport.Domain.Entities.InventoryPickup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CancelReason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EstimatedPickupTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("PickupLocation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SchedulerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime>("TimeScheduledAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("InventoryPickups");
                });

            modelBuilder.Entity("Bazaar.Transport.Domain.Entities.InventoryReturn", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CancelReason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeliveryAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EstimatedDeliveryTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("InventoryOwnerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime>("TimeScheduledAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("InventoryReturns");
                });

            modelBuilder.Entity("Bazaar.Transport.Domain.Entities.PickupProductStock", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<long>("NumberOfUnits")
                        .HasColumnType("bigint");

                    b.Property<int>("PickupId")
                        .HasColumnType("int");

                    b.Property<string>("ProductId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PickupId");

                    b.ToTable("PickupProductStocks");
                });

            modelBuilder.Entity("Bazaar.Transport.Domain.Entities.ReturnQuantity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("LotNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Quantity")
                        .HasColumnType("bigint");

                    b.Property<int>("ReturnId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ReturnId");

                    b.ToTable("ReturnQuantities");
                });

            modelBuilder.Entity("Bazaar.Transport.Domain.Entities.DeliveryPackageItem", b =>
                {
                    b.HasOne("Bazaar.Transport.Domain.Entities.Delivery", "Delivery")
                        .WithMany("PackageItems")
                        .HasForeignKey("DeliveryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Delivery");
                });

            modelBuilder.Entity("Bazaar.Transport.Domain.Entities.PickupProductStock", b =>
                {
                    b.HasOne("Bazaar.Transport.Domain.Entities.InventoryPickup", "Pickup")
                        .WithMany("ProductStocks")
                        .HasForeignKey("PickupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pickup");
                });

            modelBuilder.Entity("Bazaar.Transport.Domain.Entities.ReturnQuantity", b =>
                {
                    b.HasOne("Bazaar.Transport.Domain.Entities.InventoryReturn", "Return")
                        .WithMany("ReturnQuantities")
                        .HasForeignKey("ReturnId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Return");
                });

            modelBuilder.Entity("Bazaar.Transport.Domain.Entities.Delivery", b =>
                {
                    b.Navigation("PackageItems");
                });

            modelBuilder.Entity("Bazaar.Transport.Domain.Entities.InventoryPickup", b =>
                {
                    b.Navigation("ProductStocks");
                });

            modelBuilder.Entity("Bazaar.Transport.Domain.Entities.InventoryReturn", b =>
                {
                    b.Navigation("ReturnQuantities");
                });
#pragma warning restore 612, 618
        }
    }
}
